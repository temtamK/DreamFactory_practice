{"version":3,"file":"static/webpack/static\\development\\pages\\dream_stories\\story_details.js.283ed90dcb78a7e744fb.hot-update.js","sources":["webpack:///./pages/dream_stories/story_details.js"],"sourcesContent":["// import react\r\nimport React, { Component } from \"react\";\r\n// import layout\r\nimport Layout from \"../../components/layout\";\r\n// import DreamStory instance\r\nimport dream_story from \"../../ethereum/dream_story\";\r\n// import Form, Button from semantic-ui-react\r\nimport { Card, Icon } from \"semantic-ui-react\";\r\n// import Grid, Input, Form, Message, Button\r\nimport { Grid, Input, Form, Message, Button } from \"semantic-ui-react\";\r\n// import Container and Header\r\nimport { Container, Header } from \"semantic-ui-react\";\r\n\r\n// class based component\r\nclass StoryDetails extends Component {\r\n  // get initial properties\r\n  // the DreamStory address can be obtained from the argument props using the url\r\n  // since the url includes the contract address\r\n  static async getInitialProps(props) {\r\n    // get the DreamStory instance of the address\r\n    const story = dream_story(props.query.address);\r\n    // get summary of the story\r\n    const summary = await story.methods.getSummary().call();\r\n    // return the summary with labels\r\n    return {\r\n      address: props.query.address,\r\n      balance: summary[0],\r\n      votes_count: summary[1],\r\n      downloads_count: summary[2],\r\n      min_down_price_wei: summary[3],\r\n      approvers_count: summary[4],\r\n      author: summary[5],\r\n      story_title: summary[6],\r\n      story: summary[7]\r\n    };\r\n  }\r\n\r\n  renderActionButtons() {\r\n    return (\r\n      <Form onSubmit={this.onContribute} error={!!this.state.error_msg}>\r\n        <Form.Field>\r\n          <label>Amount to contribute</label>\r\n          <Input\r\n            label=\"ether\"\r\n            labelPosition=\"right\"\r\n            placeholder=\"0.001\"\r\n            value={this.state.contribute_price}\r\n            onChange={event =>\r\n              this.setState({ contribute_price: event.target.value })\r\n            }\r\n          />\r\n        </Form.Field>\r\n        <Message error header=\"Failed!\" content={this.state.error_msg} />\r\n        <Button loading={this.state.loading} primary>\r\n          Contribute\r\n        </Button>\r\n        <p></p>\r\n        <Link route={`/dream_stories/${this.props.address}/downloads_list`}>\r\n          <a>\r\n            <Button primary>View Downloads</Button>\r\n          </a>\r\n        </Link>\r\n        <p></p>\r\n        <Link route={`/dream_stories/${this.props.address}/request_download`}>\r\n          <a>\r\n            <Button primary>Request Download</Button>\r\n          </a>\r\n        </Link>\r\n      </Form>\r\n    );\r\n  }\r\n\r\n  // event handler for contribute button\r\n  onContribute = async () => {\r\n    // block default submitting the form\r\n    event.preventDefault();\r\n    // set button loading and clear error message\r\n    this.setState({ loading: true, error_msg: \"\" });\r\n    // catch any error while executing the following\r\n    try {\r\n      // get all accounts of a user and use the accounts[0] to contribute\r\n      const accounts = await web3.eth.getAccounts();\r\n      // get the DreamStory instance of the address\r\n      const story = dream_story(this.props.address);\r\n      // convert contribute price to wei\r\n      const contribute_price_wei = web3.utils.toWei(\r\n        this.state.contribute_price,\r\n        \"ether\"\r\n      );\r\n      // call contribute function using the user's first account\r\n      // use metamask's functinality to estimate the gas limit\r\n      await story.methods.contribute().send({\r\n        from: accounts[0],\r\n        value: contribute_price_wei\r\n      });\r\n      // refresh the current page, so the getInitialProps re-runs\r\n      Router.replaceRoute(`/dream_stories/${this.props.address}`);\r\n    } catch (error) {\r\n      this.setState({ error_msg: error.message });\r\n    }\r\n    // clear loading\r\n    this.setState({ loading: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <h2>Story Details</h2>\r\n        <Grid>\r\n          <Grid.Column width={10}>\r\n            <Container text>\r\n              <Header as=\"h3\">{this.props.story_title}</Header>\r\n              <p>{this.props.story}</p>\r\n            </Container>\r\n          </Grid.Column>\r\n          <Grid.Column width={6}>\r\n            <Card>\r\n              <Card.Content header=\"Statistics\" />\r\n              <Card.Content extra>\r\n                <Icon name=\"dollar sign\" />\r\n                {this.props.balance} (balance, ether)\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Icon name=\"user\" />\r\n                {this.props.votes_count} (votes)\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Icon name=\"download\" />\r\n                {this.props.downloads_count} (downloads)\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Icon name=\"cart arrow down\" />\r\n                {this.props.min_down_price} (download price, ether )\r\n              </Card.Content>\r\n            </Card>\r\n            {this.renderActionButtons()}\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n// export the component\r\nexport default StoryDetails;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;AA2DA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AACA;AADA;AAQA;AACA;AACA;AACA;AACA;AAKA;AACA;AAlBA;AAAA;AAmBA;AACA;AAFA;AACA;AAnBA;AAsBA;AACA;AAvBA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAwBA;AAAA;AAAA;AACA;AA1BA;AA2BA;AACA;AAAA;AAAA;AACA;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AArCA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AALA;AAUA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAIA;AAAA;AAEA;AAAA;AAKA;AACA;;;AAiCA;AACA;AAIA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AAGA;AAAA;AACA;AAAA;AASA;;;AA7HA;AACA;AACA;;;;AACA;;;;;;AACA;AACA;AACA;;AACA;AACA;;AADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AACA;;;;;;;;;;;;;;;;;;AAXA;AACA;AACA;AAgIA;;;;A","sourceRoot":""}