{"version":3,"file":"static/webpack/static\\development\\pages\\dream_stories\\new_story.js.025fb0a9cdf4762ef890.hot-update.js","sources":["webpack:///./pages/dream_stories/new_story.js"],"sourcesContent":["//import React\r\nimport React, { Component } from \"react\";\r\n//import Form, Button from semantic-ui-react\r\nimport { Form, Button, Input, TextArea, Message } from \"semantic-ui-react\";\r\n//import loyout\r\nimport Layout from \"../../componets/layout\";\r\n//import DreamFactory\r\nimport dream_factory from \"../../ethereum/dream_factory\";\r\n//import web3\r\nimport web3 from \"../../ethereum/web3\";\r\n\r\n//class based componet\r\nclass NewDreamStory extends Component {\r\n  //state for form input and error message\r\n  state = {\r\n    title: \"\",\r\n    story: \"\",\r\n    min_down_price: \"\",\r\n    error_msg: \"\",\r\n    loading: false\r\n  };\r\n\r\n  //event handler for create butto\r\n  onCreate = async () => {\r\n    //block defalut submitting the form\r\n    event.preventDefault();\r\n    //set button loading and clear error message\r\n    this.setState({ loading: true, error_msg: \"\" });\r\n    //catch any error while executing the following\r\n    try {\r\n      //get all accounts and use the accounts[0] to create a Dreamstory\r\n      const accounts = await web3.eth.getAccounts();\r\n      //convert minimum download price to wei\r\n      const min_down_pirce_wei = web3.utils.toWei(\r\n        this.state.min_down_price,\r\n        \"ether\"\r\n      );\r\n      //call createDreamStory of DreamFactory\r\n      //use metamsk's functionality to estimate the gas limit\r\n      await dream_factory.methods\r\n        .createDreamStory(\r\n          min_down_pirce_wei,\r\n          this.state.title,\r\n          this.state.story\r\n        )\r\n        .call({\r\n          from: accounts[0]\r\n        });\r\n    } catch (error) {\r\n      this.setState({ error_msg: error.message });\r\n    }\r\n    //clear loading\r\n    this.setState({ loading: false });\r\n  };\r\n  //render\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Form onSubmit={this.onCreate} error={!!this.state.error_msg}>\r\n          <Form.Group>\r\n            <Form.Field width={12}>\r\n              <label>Create a Dream Story</label>\r\n              <Input\r\n                placeholder=\"Title\"\r\n                value={this.state.title}\r\n                onChange={event => this.setState({ title: event.target.value })}\r\n              ></Input>\r\n            </Form.Field>\r\n            <Form.Field width={4}>\r\n              <label>Minimum Download Price</label>\r\n              <Input\r\n                label=\"ether\"\r\n                labelPosition=\"right\"\r\n                placeholder=\"0.001\"\r\n                value={this.state.min_down_price}\r\n                onChange={event =>\r\n                  this.setState({ min_down_price: event.target.value })\r\n                }\r\n              ></Input>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Field width={12}>\r\n              <TextArea\r\n                label=\"Creat a Dream Story\"\r\n                placeholder=\"Tell us about your dream story\"\r\n                style={{ minHeight: 300 }}\r\n                value={this.state.story}\r\n                onChange={event => this.setState({ story: event.target.value })}\r\n              ></TextArea>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Message\r\n            error\r\n            header=\"Failed!\"\r\n            content={this.state.error_msg}\r\n          ></Message>\r\n          <Button loading={this.state.loading} primary>\r\n            Create!\r\n          </Button>\r\n        </Form>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewDreamStory;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;;;;;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AANA;AAAA;AAAA;AACA;AADA;AAQA;AACA;AACA;AAKA;AACA;AAhBA;AAAA;AAuBA;AADA;AACA;AAvBA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAyBA;AAAA;AAAA;AACA;AA3BA;AA4BA;AACA;AAAA;AAAA;AACA;AA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;AA8BA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA3FA;AACA;AA6FA;;;;A","sourceRoot":""}