{"ast":null,"code":"import _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar __jsx = React.createElement;\n// import react\nimport React, { Component } from \"react\"; // import DreamFactory instance\n\nimport dream_factory from \"../ethereum/dream_factory\"; // import layout file\n\nimport Layout from \"../componets/layout\"; // import Card UI component only\n\nimport { Card } from \"semantic-ui-react\"; // import Button UI component only\n\nimport { Button } from \"semantic-ui-react\";\nimport { Link } from \"../routes\"; // class based component\n\nclass FactoryIndex extends Component {\n  // get initial properties\n  // use static to accelerate the rendering.\n  // static functions belong not to instance but to class\n  static async getInitialProps() {\n    // get dream factory instance\n    const stories = await dream_factory.methods.getDeployedDreamStories().call(); // Generate array of indices and fill them\n\n    const titles = await _Promise.all(Array(_parseInt(stories.length)).fill().map((element, index) => {\n      return dream_factory.methods.stories_titles(stories[index]).call();\n    }));\n    return {\n      stories,\n      titles\n    };\n  } // render card groups to display stories\n\n\n  renderStories() {\n    // map calls the arugment function one time for every element inside stories array\n    const items = _Object$entries(this.props.stories).map((address, index) => {\n      return {\n        header: this.props.titles[index],\n        description: __jsx(Link, {\n          route: `/dream_stories/${address[1]}`\n        }, __jsx(\"a\", null, \"View Story Details\")),\n        meta: address,\n        fluid: true\n      };\n    });\n\n    return __jsx(Card.Group, {\n      items: items\n    });\n  } // render the component\n\n\n  render() {\n    // now whenever the component is rendered, the getInitialProps() is called before.\n    // so we can access the stories object\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Dream Stories on slae\"), __jsx(Link, {\n      route: \"/dream_stories/new_story\"\n    }, __jsx(Button, {\n      floated: \"right\",\n      content: \"Create a Story\",\n      icon: \"add\",\n      primary: true\n    })), this.renderStories(), __jsx(\"h3\", null, \"The number of stories: \", this.props.stories.length));\n  }\n\n} // export the component so that the next can use this\n\n\nexport default FactoryIndex;","map":{"version":3,"sources":["c:/Practice/DreamFactory_practice/pages/index.js"],"names":["React","Component","dream_factory","Layout","Card","Button","Link","FactoryIndex","getInitialProps","stories","methods","getDeployedDreamStories","call","titles","all","Array","length","fill","map","element","index","stories_titles","renderStories","items","props","address","header","description","meta","fluid","render"],"mappings":";;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,aAAP,MAA0B,2BAA1B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CACA;;AACA,SAASC,IAAT,QAAqB,mBAArB,C,CACA;;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,IAAT,QAAqB,WAArB,C,CAEA;;AACA,MAAMC,YAAN,SAA2BN,SAA3B,CAAqC;AACnC;AACA;AACA;AACA,eAAaO,eAAb,GAA+B;AAC7B;AACA,UAAMC,OAAO,GAAG,MAAMP,aAAa,CAACQ,OAAd,CACnBC,uBADmB,GAEnBC,IAFmB,EAAtB,CAF6B,CAK7B;;AACA,UAAMC,MAAM,GAAG,MAAM,SAAQC,GAAR,CACnBC,KAAK,CAAC,UAASN,OAAO,CAACO,MAAjB,CAAD,CAAL,CACGC,IADH,GAEGC,GAFH,CAEO,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACvB,aAAOlB,aAAa,CAACQ,OAAd,CAAsBW,cAAtB,CAAqCZ,OAAO,CAACW,KAAD,CAA5C,EAAqDR,IAArD,EAAP;AACD,KAJH,CADmB,CAArB;AAQA,WAAO;AAAEH,MAAAA,OAAF;AAAWI,MAAAA;AAAX,KAAP;AACD,GAnBkC,CAqBnC;;;AACAS,EAAAA,aAAa,GAAG;AACd;AACA,UAAMC,KAAK,GAAG,gBAAe,KAAKC,KAAL,CAAWf,OAA1B,EAAmCS,GAAnC,CAAuC,CAACO,OAAD,EAAUL,KAAV,KAAoB;AACvE,aAAO;AACLM,QAAAA,MAAM,EAAE,KAAKF,KAAL,CAAWX,MAAX,CAAkBO,KAAlB,CADH;AAELO,QAAAA,WAAW,EACT,MAAC,IAAD;AAAM,UAAA,KAAK,EAAG,kBAAiBF,OAAO,CAAC,CAAD,CAAI;AAA1C,WACE,sCADF,CAHG;AAOLG,QAAAA,IAAI,EAAEH,OAPD;AAQLI,QAAAA,KAAK,EAAE;AARF,OAAP;AAUD,KAXa,CAAd;;AAaA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEN;AAAnB,MAAP;AACD,GAtCkC,CAwCnC;;;AACAO,EAAAA,MAAM,GAAG;AACP;AACA;AACA,WACE,MAAC,MAAD,QACE,0CADF,EAEE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAC;AAAZ,OACE,MAAC,MAAD;AACE,MAAA,OAAO,EAAC,OADV;AAEE,MAAA,OAAO,EAAC,gBAFV;AAGE,MAAA,IAAI,EAAC,KAHP;AAIE,MAAA,OAAO,EAAE;AAJX,MADF,CAFF,EAUG,KAAKR,aAAL,EAVH,EAWE,6CAA4B,KAAKE,KAAL,CAAWf,OAAX,CAAmBO,MAA/C,CAXF,CADF;AAeD;;AA3DkC,C,CA8DrC;;;AACA,eAAeT,YAAf","sourcesContent":["// import react\r\nimport React, { Component } from \"react\";\r\n// import DreamFactory instance\r\nimport dream_factory from \"../ethereum/dream_factory\";\r\n// import layout file\r\nimport Layout from \"../componets/layout\";\r\n// import Card UI component only\r\nimport { Card } from \"semantic-ui-react\";\r\n// import Button UI component only\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Link } from \"../routes\";\r\n\r\n// class based component\r\nclass FactoryIndex extends Component {\r\n  // get initial properties\r\n  // use static to accelerate the rendering.\r\n  // static functions belong not to instance but to class\r\n  static async getInitialProps() {\r\n    // get dream factory instance\r\n    const stories = await dream_factory.methods\r\n      .getDeployedDreamStories()\r\n      .call();\r\n    // Generate array of indices and fill them\r\n    const titles = await Promise.all(\r\n      Array(parseInt(stories.length))\r\n        .fill()\r\n        .map((element, index) => {\r\n          return dream_factory.methods.stories_titles(stories[index]).call();\r\n        })\r\n    );\r\n\r\n    return { stories, titles };\r\n  }\r\n\r\n  // render card groups to display stories\r\n  renderStories() {\r\n    // map calls the arugment function one time for every element inside stories array\r\n    const items = Object.entries(this.props.stories).map((address, index) => {\r\n      return {\r\n        header: this.props.titles[index],\r\n        description: (\r\n          <Link route={`/dream_stories/${address[1]}`}>\r\n            <a>View Story Details</a>\r\n          </Link>\r\n        ),\r\n        meta: address,\r\n        fluid: true\r\n      };\r\n    });\r\n\r\n    return <Card.Group items={items} />;\r\n  }\r\n\r\n  // render the component\r\n  render() {\r\n    // now whenever the component is rendered, the getInitialProps() is called before.\r\n    // so we can access the stories object\r\n    return (\r\n      <Layout>\r\n        <h3>Dream Stories on slae</h3>\r\n        <Link route=\"/dream_stories/new_story\">\r\n          <Button\r\n            floated=\"right\"\r\n            content=\"Create a Story\"\r\n            icon=\"add\"\r\n            primary={true}\r\n          />\r\n        </Link>\r\n        {this.renderStories()}\r\n        <h3>The number of stories: {this.props.stories.length}</h3>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n// export the component so that the next can use this\r\nexport default FactoryIndex;\r\n"]},"metadata":{},"sourceType":"module"}