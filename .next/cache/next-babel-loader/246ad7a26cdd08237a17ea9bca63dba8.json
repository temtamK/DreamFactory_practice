{"ast":null,"code":"// import web3, Web3 is a constructor function\nimport Web3 from \"web3\"; // declare a variable\n\nlet web3; // handle client side rendering and metamask user\n\nif (false && window.web3 !== \"undefined\") {\n  // we are in the browser and metamask is running,\n  // so use the provider injected by metamask without considering the web3 version\n  web3 = new Web3(window.web3.currentProvider);\n} // handle server-side rendering and non-metamask user\n// the window variable is undefined\nelse {\n    // we are on the server or the user is not running metamask\n    // make own provider through infura\n    const provider = new Web3.providers.HttpProvider( // put your infura api key for rinkeby\n    \"https://rinkeby.infura.io/v3/6ee87ef7d0d448daba84942b01eeb420\");\n    web3 = new Web3(provider);\n  } // export the web3 instance\n\n\nexport default web3;","map":{"version":3,"sources":["c:/Practice/dappfront/ethereum/web3.js"],"names":["Web3","web3","window","currentProvider","provider","providers","HttpProvider"],"mappings":"AAAA;AACA,OAAOA,IAAP,MAAiB,MAAjB,C,CAEA;;AACA,IAAIC,IAAJ,C,CAEA;;AACA,IAAI,SAAiCC,MAAM,CAACD,IAAP,KAAgB,WAArD,EAAkE;AAChE;AACA;AACAA,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASE,MAAM,CAACD,IAAP,CAAYE,eAArB,CAAP;AACD,CAJD,CAKA;AACA;AANA,KAOK;AACH;AACA;AACA,UAAMC,QAAQ,GAAG,IAAIJ,IAAI,CAACK,SAAL,CAAeC,YAAnB,EACf;AACA,mEAFe,CAAjB;AAIAL,IAAAA,IAAI,GAAG,IAAID,IAAJ,CAASI,QAAT,CAAP;AACD,G,CAED;;;AACA,eAAeH,IAAf","sourcesContent":["// import web3, Web3 is a constructor function\r\nimport Web3 from \"web3\";\r\n\r\n// declare a variable\r\nlet web3;\r\n\r\n// handle client side rendering and metamask user\r\nif (typeof window !== \"undefined\" && window.web3 !== \"undefined\") {\r\n  // we are in the browser and metamask is running,\r\n  // so use the provider injected by metamask without considering the web3 version\r\n  web3 = new Web3(window.web3.currentProvider);\r\n}\r\n// handle server-side rendering and non-metamask user\r\n// the window variable is undefined\r\nelse {\r\n  // we are on the server or the user is not running metamask\r\n  // make own provider through infura\r\n  const provider = new Web3.providers.HttpProvider(\r\n    // put your infura api key for rinkeby\r\n    \"https://rinkeby.infura.io/v3/6ee87ef7d0d448daba84942b01eeb420\"\r\n  );\r\n  web3 = new Web3(provider);\r\n}\r\n\r\n// export the web3 instance\r\nexport default web3;\r\n"]},"metadata":{},"sourceType":"module"}