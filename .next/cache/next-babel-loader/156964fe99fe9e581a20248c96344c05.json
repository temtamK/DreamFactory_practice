{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _Object$entries from \"@babel/runtime-corejs2/core-js/object/entries\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n// import react\nimport React, { Component } from \"react\"; // import DreamFactory instance\n\nimport dream_factory from \"../ethereum/dream_factory\"; // import layout file\n\nimport Layout from \"../componets/layout\"; // import Card UI component only\n\nimport { Card } from \"semantic-ui-react\"; // import Button UI component only\n\nimport { Button } from \"semantic-ui-react\";\nimport { Link } from \"../routes\"; // class based component\n\nvar FactoryIndex =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FactoryIndex, _Component);\n\n  function FactoryIndex() {\n    _classCallCheck(this, FactoryIndex);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FactoryIndex).apply(this, arguments));\n  }\n\n  _createClass(FactoryIndex, [{\n    key: \"renderStories\",\n    // render card groups to display stories\n    value: function renderStories() {\n      var _this = this;\n\n      // map calls the arugment function one time for every element inside stories array\n      var items = _Object$entries(this.props.stories).map(function (address, index) {\n        return {\n          header: _this.props.titles[index],\n          description: __jsx(Link, {\n            route: \"/dream_stories/\".concat(address[1])\n          }, __jsx(\"a\", null, \"View Story Details\")),\n          meta: address,\n          fluid: true\n        };\n      });\n\n      return __jsx(Card.Group, {\n        items: items\n      });\n    } // render the component\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      // now whenever the component is rendered, the getInitialProps() is called before.\n      // so we can access the stories object\n      return __jsx(Layout, null, __jsx(\"h3\", null, \"Dream Stories on slae\"), __jsx(Link, {\n        route: \"/dream_stories/new_story\"\n      }, __jsx(Button, {\n        floated: \"right\",\n        content: \"Create a Story\",\n        icon: \"add\",\n        primary: true\n      })), this.renderStories(), __jsx(\"h3\", null, \"The number of stories: \", this.props.stories.length));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    // get initial properties\n    // use static to accelerate the rendering.\n    // static functions belong not to instance but to class\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var stories, titles;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return dream_factory.methods.getDeployedDreamStories().call();\n\n              case 2:\n                stories = _context.sent;\n                _context.next = 5;\n                return _Promise.all(Array(_parseInt(stories.length)).fill().map(function (element, index) {\n                  return dream_factory.methods.stories_titles(stories[index]).call();\n                }));\n\n              case 5:\n                titles = _context.sent;\n                return _context.abrupt(\"return\", {\n                  stories: stories,\n                  titles: titles\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return FactoryIndex;\n}(Component); // export the component so that the next can use this\n\n\nexport default FactoryIndex;","map":{"version":3,"sources":["c:/Practice/DreamFactory_practice/pages/index.js"],"names":["React","Component","dream_factory","Layout","Card","Button","Link","FactoryIndex","items","props","stories","map","address","index","header","titles","description","meta","fluid","renderStories","length","methods","getDeployedDreamStories","call","all","Array","fill","element","stories_titles"],"mappings":";;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,aAAP,MAA0B,2BAA1B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CACA;;AACA,SAASC,IAAT,QAAqB,mBAArB,C,CACA;;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,IAAT,QAAqB,WAArB,C,CAEA;;IACMC,Y;;;;;;;;;;;;;AAqBJ;oCACgB;AAAA;;AACd;AACA,UAAMC,KAAK,GAAG,gBAAe,KAAKC,KAAL,CAAWC,OAA1B,EAAmCC,GAAnC,CAAuC,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACvE,eAAO;AACLC,UAAAA,MAAM,EAAE,KAAI,CAACL,KAAL,CAAWM,MAAX,CAAkBF,KAAlB,CADH;AAELG,UAAAA,WAAW,EACT,MAAC,IAAD;AAAM,YAAA,KAAK,2BAAoBJ,OAAO,CAAC,CAAD,CAA3B;AAAX,aACE,sCADF,CAHG;AAOLK,UAAAA,IAAI,EAAEL,OAPD;AAQLM,UAAAA,KAAK,EAAE;AARF,SAAP;AAUD,OAXa,CAAd;;AAaA,aAAO,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEV;AAAnB,QAAP;AACD,K,CAED;;;;6BACS;AACP;AACA;AACA,aACE,MAAC,MAAD,QACE,0CADF,EAEE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAC;AAAZ,SACE,MAAC,MAAD;AACE,QAAA,OAAO,EAAC,OADV;AAEE,QAAA,OAAO,EAAC,gBAFV;AAGE,QAAA,IAAI,EAAC,KAHP;AAIE,QAAA,OAAO,EAAE;AAJX,QADF,CAFF,EAUG,KAAKW,aAAL,EAVH,EAWE,6CAA4B,KAAKV,KAAL,CAAWC,OAAX,CAAmBU,MAA/C,CAXF,CADF;AAeD;;;AA1DD;AACA;AACA;;;;;;;;;;;uBAGwBlB,aAAa,CAACmB,OAAd,CACnBC,uBADmB,GAEnBC,IAFmB,E;;;AAAhBb,gBAAAA,O;;uBAIe,SAAQc,GAAR,CACnBC,KAAK,CAAC,UAASf,OAAO,CAACU,MAAjB,CAAD,CAAL,CACGM,IADH,GAEGf,GAFH,CAEO,UAACgB,OAAD,EAAUd,KAAV,EAAoB;AACvB,yBAAOX,aAAa,CAACmB,OAAd,CAAsBO,cAAtB,CAAqClB,OAAO,CAACG,KAAD,CAA5C,EAAqDU,IAArD,EAAP;AACD,iBAJH,CADmB,C;;;AAAfR,gBAAAA,M;iDAQC;AAAEL,kBAAAA,OAAO,EAAPA,OAAF;AAAWK,kBAAAA,MAAM,EAANA;AAAX,iB;;;;;;;;;;;;;;;;;;;EAlBgBd,S,GA8D3B;;;AACA,eAAeM,YAAf","sourcesContent":["// import react\r\nimport React, { Component } from \"react\";\r\n// import DreamFactory instance\r\nimport dream_factory from \"../ethereum/dream_factory\";\r\n// import layout file\r\nimport Layout from \"../componets/layout\";\r\n// import Card UI component only\r\nimport { Card } from \"semantic-ui-react\";\r\n// import Button UI component only\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Link } from \"../routes\";\r\n\r\n// class based component\r\nclass FactoryIndex extends Component {\r\n  // get initial properties\r\n  // use static to accelerate the rendering.\r\n  // static functions belong not to instance but to class\r\n  static async getInitialProps() {\r\n    // get dream factory instance\r\n    const stories = await dream_factory.methods\r\n      .getDeployedDreamStories()\r\n      .call();\r\n    // Generate array of indices and fill them\r\n    const titles = await Promise.all(\r\n      Array(parseInt(stories.length))\r\n        .fill()\r\n        .map((element, index) => {\r\n          return dream_factory.methods.stories_titles(stories[index]).call();\r\n        })\r\n    );\r\n\r\n    return { stories, titles };\r\n  }\r\n\r\n  // render card groups to display stories\r\n  renderStories() {\r\n    // map calls the arugment function one time for every element inside stories array\r\n    const items = Object.entries(this.props.stories).map((address, index) => {\r\n      return {\r\n        header: this.props.titles[index],\r\n        description: (\r\n          <Link route={`/dream_stories/${address[1]}`}>\r\n            <a>View Story Details</a>\r\n          </Link>\r\n        ),\r\n        meta: address,\r\n        fluid: true\r\n      };\r\n    });\r\n\r\n    return <Card.Group items={items} />;\r\n  }\r\n\r\n  // render the component\r\n  render() {\r\n    // now whenever the component is rendered, the getInitialProps() is called before.\r\n    // so we can access the stories object\r\n    return (\r\n      <Layout>\r\n        <h3>Dream Stories on slae</h3>\r\n        <Link route=\"/dream_stories/new_story\">\r\n          <Button\r\n            floated=\"right\"\r\n            content=\"Create a Story\"\r\n            icon=\"add\"\r\n            primary={true}\r\n          />\r\n        </Link>\r\n        {this.renderStories()}\r\n        <h3>The number of stories: {this.props.stories.length}</h3>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n// export the component so that the next can use this\r\nexport default FactoryIndex;\r\n"]},"metadata":{},"sourceType":"module"}