{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"c:\\\\Practice\\\\DreamFactory_practice\\\\pages\\\\dream_stories\\\\new_story.js\";\nvar __jsx = React.createElement;\n//import React\nimport React, { Component } from \"react\"; //import Form, Button from semantic-ui-react\n\nimport { Form, Button, Input, TextArea, Message } from \"semantic-ui-react\"; //import loyout\n\nimport Layout from \"../../componets/layout\"; //import DreamFactory\n\nimport dream_factory from \"../../ethereum/dream_factory\"; //import web3\n\nimport web3 from \"../../ethereum/web3\"; //class based componet\n\nclass NewDreamStory extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      title: \"\",\n      story: \"\",\n      min_down_price: \"\",\n      error_msg: \"\",\n      loading: false\n    });\n\n    _defineProperty(this, \"onCreate\", async () => {\n      //block defalut submitting the form\n      event.preventDefault(); //set button loading and clear error message\n\n      this.setState({\n        loading: true,\n        error_msg: \"\"\n      }); //catch any error while executing the following\n\n      try {\n        //get all accounts and use the accounts[0] to create a Dreamstory\n        const accounts = await web3.eth.getAccounts(); //convert minimum download price to wei\n\n        const min_down_pirce_wei = web3.utils.towei(this.state.min_down_price, \"ether\"); //call createDreamStory of DreamFactory\n        //use metamsk's functionality to estimate the gas limit\n\n        await dream_factory_methods.createDeramStory(min_down_pirce_wei, this.state.title, this.state.story).send({\n          from: accounts[0]\n        });\n      } catch (error) {\n        this.setState({\n          error_msg: error.message\n        });\n      } //clear loading\n\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  //render\n  render() {\n    return __jsx(Layout, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, __jsx(Form, {\n      onSubmit: this.onCreate,\n      error: !!this.state.error_msg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }), __jsx(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, __jsx(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, __jsx(Form.Field, {\n      width: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Create a Dream Story\"), __jsx(Input, {\n      placeholder: \"Title\",\n      value: this.state.title,\n      onChange: event => this.setState({\n        title: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), __jsx(Form.Field, {\n      width: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Minimum Download Price\"), __jsx(Input, {\n      label: \"ether\",\n      labelPosition: \"right\",\n      placeholder: \"0.001\",\n      value: this.state.min_down_price,\n      onChange: event => this.setState({\n        min_down_price: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), __jsx(Form.Group, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, __jsx(Form.Field, {\n      width: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, __jsx(TextArea, {\n      label: \"Creat a Dream Story\",\n      placeholder: \"Tell us about your dream story\",\n      style: {\n        minHeight: 300\n      },\n      value: this.state.story,\n      onChange: event => this.setState({\n        story: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))), __jsx(Message, {\n      error: true,\n      header: \"Failed!\",\n      content: this.state.error_msg,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }), __jsx(Button, {\n      id: \"onCreate\",\n      loading: this.state.loading,\n      primary: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Create!\")));\n  }\n\n}\n\nexport default NewDreamStory;","map":{"version":3,"sources":["c:/Practice/DreamFactory_practice/pages/dream_stories/new_story.js"],"names":["React","Component","Form","Button","Input","TextArea","Message","Layout","dream_factory","web3","NewDreamStory","title","story","min_down_price","error_msg","loading","event","preventDefault","setState","accounts","eth","getAccounts","min_down_pirce_wei","utils","towei","state","dream_factory_methods","createDeramStory","send","from","error","message","render","onCreate","target","value","minHeight"],"mappings":"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","sourcesContent":["//import React\r\nimport React, { Component } from \"react\";\r\n//import Form, Button from semantic-ui-react\r\nimport { Form, Button, Input, TextArea, Message } from \"semantic-ui-react\";\r\n//import loyout\r\nimport Layout from \"../../componets/layout\";\r\n//import DreamFactory\r\nimport dream_factory from \"../../ethereum/dream_factory\";\r\n//import web3\r\nimport web3 from \"../../ethereum/web3\";\r\n\r\n//class based componet\r\nclass NewDreamStory extends Component {\r\n  //state for form input and error message\r\n  state = {\r\n    title: \"\",\r\n    story: \"\",\r\n    min_down_price: \"\",\r\n    error_msg: \"\",\r\n    loading: false\r\n  };\r\n\r\n  //event handler for create butto\r\n  onCreate = async () => {\r\n    //block defalut submitting the form\r\n    event.preventDefault();\r\n    //set button loading and clear error message\r\n    this.setState({ loading: true, error_msg: \"\" });\r\n    //catch any error while executing the following\r\n    try {\r\n      //get all accounts and use the accounts[0] to create a Dreamstory\r\n      const accounts = await web3.eth.getAccounts();\r\n      //convert minimum download price to wei\r\n      const min_down_pirce_wei = web3.utils.towei(\r\n        this.state.min_down_price,\r\n        \"ether\"\r\n      );\r\n      //call createDreamStory of DreamFactory\r\n      //use metamsk's functionality to estimate the gas limit\r\n      await dream_factory_methods\r\n        .createDeramStory(\r\n          min_down_pirce_wei,\r\n          this.state.title,\r\n          this.state.story\r\n        )\r\n        .send({\r\n          from: accounts[0]\r\n        });\r\n    } catch (error) {\r\n      this.setState({ error_msg: error.message });\r\n    }\r\n    //clear loading\r\n    this.setState({ loading: false });\r\n  };\r\n  //render\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Form onSubmit={this.onCreate} error={!!this.state.error_msg}></Form>\r\n        <Form>\r\n          <Form.Group>\r\n            <Form.Field width={12}>\r\n              <label>Create a Dream Story</label>\r\n              <Input\r\n                placeholder=\"Title\"\r\n                value={this.state.title}\r\n                onChange={event => this.setState({ title: event.target.value })}\r\n              ></Input>\r\n            </Form.Field>\r\n            <Form.Field width={4}>\r\n              <label>Minimum Download Price</label>\r\n              <Input\r\n                label=\"ether\"\r\n                labelPosition=\"right\"\r\n                placeholder=\"0.001\"\r\n                value={this.state.min_down_price}\r\n                onChange={event =>\r\n                  this.setState({ min_down_price: event.target.value })\r\n                }\r\n              ></Input>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Field width={12}>\r\n              <TextArea\r\n                label=\"Creat a Dream Story\"\r\n                placeholder=\"Tell us about your dream story\"\r\n                style={{ minHeight: 300 }}\r\n                value={this.state.story}\r\n                onChange={event => this.setState({ story: event.target.value })}\r\n              ></TextArea>\r\n            </Form.Field>\r\n          </Form.Group>\r\n          <Message\r\n            error\r\n            header=\"Failed!\"\r\n            content={this.state.error_msg}\r\n          ></Message>\r\n          <Button id=\"onCreate\" loading={this.state.loading} primary>\r\n            Create!\r\n          </Button>\r\n        </Form>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NewDreamStory;\r\n"]},"metadata":{},"sourceType":"module"}