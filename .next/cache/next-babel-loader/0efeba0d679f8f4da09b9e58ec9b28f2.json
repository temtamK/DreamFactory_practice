{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"c:\\\\Practice\\\\dappfront\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n// import react\nimport React, { Component } from \"react\"; // import DreamFactory instance\n\nimport dream_factory from \"../ethereum/dream_factory\"; // import Card UI component only\n\nimport { Card } from \"semantic-ui-react\"; // class based component\n\nvar FactoryIndex =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FactoryIndex, _Component);\n\n  function FactoryIndex() {\n    _classCallCheck(this, FactoryIndex);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FactoryIndex).apply(this, arguments));\n  }\n\n  _createClass(FactoryIndex, [{\n    key: \"renderStories\",\n    // render card groups to display stories\n    value: function renderStories() {\n      // map calls the arugment function one time for every element inside stories array\n      // fluid option is to extend the component\n      var items = this.props.stories.map(function (address) {\n        return {\n          header: address,\n          description: __jsx(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 29\n            },\n            __self: this\n          }, \"View Story\"),\n          fluid: true\n        };\n      });\n      return __jsx(Card.Group, {\n        items: items,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      });\n    } // render the component\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      // now whenever the component is rendered, the getInitialProps() is called before.\n      // so we can access the stories object\n      return __jsx(\"div\", {\n        style: {\n          marginRight: \"1300px\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.1/semantic.min.css\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), this.renderStories());\n    }\n  }], [{\n    key: \"getInitialProps\",\n    // get initial properties\n    // use static to accelerate the rendering.\n    // static functions belong not to instance but to class\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var stories;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return dream_factory.methods.getDeployedDreamStories().call();\n\n              case 2:\n                stories = _context.sent;\n                return _context.abrupt(\"return\", {\n                  stories: stories\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return FactoryIndex;\n}(Component); // export the component so that the next can use this\n\n\nexport default FactoryIndex;","map":{"version":3,"sources":["c:/Practice/dappfront/pages/index.js"],"names":["React","Component","dream_factory","Card","FactoryIndex","items","props","stories","map","address","header","description","fluid","marginRight","renderStories","methods","getDeployedDreamStories","call"],"mappings":";;;;;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,aAAP,MAA0B,2BAA1B,C,CACA;;AACA,SAASC,IAAT,QAAqB,mBAArB,C,CAEA;;IACMC,Y;;;;;;;;;;;;;AAaJ;oCACgB;AACd;AACA;AACA,UAAMC,KAAK,GAAG,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAAAC,OAAO,EAAI;AAC9C,eAAO;AACLC,UAAAA,MAAM,EAAED,OADH;AAELE,UAAAA,WAAW,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFR;AAGLC,UAAAA,KAAK,EAAE;AAHF,SAAP;AAKD,OANa,CAAd;AAQA,aAAO,MAAC,IAAD,CAAM,KAAN;AAAY,QAAA,KAAK,EAAEP,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,K,CAED;;;;6BACS;AACP;AACA;AACA,aACE;AAAK,QAAA,KAAK,EAAE;AAAEQ,UAAAA,WAAW,EAAE;AAAf,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,GAAG,EAAC,YADN;AAEE,QAAA,IAAI,EAAC,qEAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAMG,KAAKC,aAAL,EANH,CADF;AAUD;;;AAzCD;AACA;AACA;;;;;;;;;;;uBAEwBZ,aAAa,CAACa,OAAd,CACnBC,uBADmB,GAEnBC,IAFmB,E;;;AAAhBV,gBAAAA,O;iDAKC;AAAEA,kBAAAA,OAAO,EAAEA;AAAX,iB;;;;;;;;;;;;;;;;;;;EAVgBN,S,GA6C3B;;;AACA,eAAeG,YAAf","sourcesContent":["// import react\r\nimport React, { Component } from \"react\";\r\n// import DreamFactory instance\r\nimport dream_factory from \"../ethereum/dream_factory\";\r\n// import Card UI component only\r\nimport { Card } from \"semantic-ui-react\";\r\n\r\n// class based component\r\nclass FactoryIndex extends Component {\r\n  // get initial properties\r\n  // use static to accelerate the rendering.\r\n  // static functions belong not to instance but to class\r\n  static async getInitialProps() {\r\n    const stories = await dream_factory.methods\r\n      .getDeployedDreamStories()\r\n      .call();\r\n    // return stories object\r\n    // if we use ES6 code the following can be condensed to return { stories }\r\n    return { stories: stories };\r\n  }\r\n\r\n  // render card groups to display stories\r\n  renderStories() {\r\n    // map calls the arugment function one time for every element inside stories array\r\n    // fluid option is to extend the component\r\n    const items = this.props.stories.map(address => {\r\n      return {\r\n        header: address,\r\n        description: <a>View Story</a>,\r\n        fluid: true\r\n      };\r\n    });\r\n\r\n    return <Card.Group items={items}></Card.Group>;\r\n  }\r\n\r\n  // render the component\r\n  render() {\r\n    // now whenever the component is rendered, the getInitialProps() is called before.\r\n    // so we can access the stories object\r\n    return (\r\n      <div style={{ marginRight: \"1300px\" }}>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.1/semantic.min.css\"\r\n        ></link>\r\n\r\n        {this.renderStories()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export the component so that the next can use this\r\nexport default FactoryIndex;\r\n"]},"metadata":{},"sourceType":"module"}