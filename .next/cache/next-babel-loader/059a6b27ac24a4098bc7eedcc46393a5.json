{"ast":null,"code":"var _jsxFileName = \"c:\\\\Practice\\\\dappfront\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\n// import react\nimport React, { Component } from \"react\"; // import DreamFactory instance\n\nimport dream_factory from \"../ethereum/dream_factory\"; // import Card UI component only\n\nimport { Card } from \"semantic-ui-react\"; // class based component\n\nclass FactoryIndex extends Component {\n  // get initial properties\n  // use static to accelerate the rendering.\n  // static functions belong not to instance but to class\n  static async getInitialProps() {\n    const stories = await dream_factory.method.getDeployedDreamStories().call(); // return stories object\n    // if we use ES6 code the following can be condensed to return { stories }\n\n    return {\n      stories: stories\n    };\n  } // render card groups to display stories\n\n\n  renderStories() {\n    // map calls the arugment function one time for every element inside stories array\n    // fluid option is to extend the component\n    const items = tihs.props.stories.map(address => {\n      return {\n        header: address,\n        description: __jsx(\"a\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, \"View Story\"),\n        fluid: true\n      };\n    });\n    return __jsx(Card.Group, {\n      items: items,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  } // render the component\n\n\n  render() {\n    // now whenever the component is rendered, the getInitialProps() is called before.\n    // so we can access the stories object\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.1/semantic.min.css\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), this.props.stories[0]);\n  }\n\n} // export the component so that the next can use this\n\n\nexport default FactoryIndex;","map":{"version":3,"sources":["c:/Practice/dappfront/pages/index.js"],"names":["React","Component","dream_factory","Card","FactoryIndex","getInitialProps","stories","method","getDeployedDreamStories","call","renderStories","items","tihs","props","map","address","header","description","fluid","render"],"mappings":";;AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,aAAP,MAA0B,2BAA1B,C,CACA;;AACA,SAASC,IAAT,QAAqB,mBAArB,C,CAEA;;AACA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AACnC;AACA;AACA;AACA,eAAaI,eAAb,GAA+B;AAC7B,UAAMC,OAAO,GAAG,MAAMJ,aAAa,CAACK,MAAd,CAAqBC,uBAArB,GAA+CC,IAA/C,EAAtB,CAD6B,CAE7B;AACA;;AACA,WAAO;AAAEH,MAAAA,OAAO,EAAEA;AAAX,KAAP;AACD,GATkC,CAWnC;;;AACAI,EAAAA,aAAa,GAAG;AACd;AACA;AACA,UAAMC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWP,OAAX,CAAmBQ,GAAnB,CAAuBC,OAAO,IAAI;AAC9C,aAAO;AACLC,QAAAA,MAAM,EAAED,OADH;AAELE,QAAAA,WAAW,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFR;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;AAKD,KANa,CAAd;AAQA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEP,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD,GAxBkC,CA0BnC;;;AACAQ,EAAAA,MAAM,GAAG;AACP;AACA;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,GAAG,EAAC,YADN;AAEE,MAAA,IAAI,EAAC,qEAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAKG,KAAKN,KAAL,CAAWP,OAAX,CAAmB,CAAnB,CALH,CADF;AASD;;AAvCkC,C,CA0CrC;;;AACA,eAAeF,YAAf","sourcesContent":["// import react\r\nimport React, { Component } from \"react\";\r\n// import DreamFactory instance\r\nimport dream_factory from \"../ethereum/dream_factory\";\r\n// import Card UI component only\r\nimport { Card } from \"semantic-ui-react\";\r\n\r\n// class based component\r\nclass FactoryIndex extends Component {\r\n  // get initial properties\r\n  // use static to accelerate the rendering.\r\n  // static functions belong not to instance but to class\r\n  static async getInitialProps() {\r\n    const stories = await dream_factory.method.getDeployedDreamStories().call();\r\n    // return stories object\r\n    // if we use ES6 code the following can be condensed to return { stories }\r\n    return { stories: stories };\r\n  }\r\n\r\n  // render card groups to display stories\r\n  renderStories() {\r\n    // map calls the arugment function one time for every element inside stories array\r\n    // fluid option is to extend the component\r\n    const items = tihs.props.stories.map(address => {\r\n      return {\r\n        header: address,\r\n        description: <a>View Story</a>,\r\n        fluid: true\r\n      };\r\n    });\r\n\r\n    return <Card.Group items={items}></Card.Group>;\r\n  }\r\n\r\n  // render the component\r\n  render() {\r\n    // now whenever the component is rendered, the getInitialProps() is called before.\r\n    // so we can access the stories object\r\n    return (\r\n      <div>\r\n        <link\r\n          rel=\"stylesheet\"\r\n          href=\"//cdnjs.cloudflare.com/ajax/libs/semantic-ui/2.3.1/semantic.min.css\"\r\n        ></link>\r\n        {this.props.stories[0]}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// export the component so that the next can use this\r\nexport default FactoryIndex;\r\n"]},"metadata":{},"sourceType":"module"}