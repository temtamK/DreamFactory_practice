{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n// import react\nimport React, { Component } from \"react\"; // import layout\n\nimport Layout from \"../../components/layout\"; // import DreamStory instance\n\nimport dream_story from \"../../ethereum/dream_story\"; // import Form, Button from semantic-ui-react\n\nimport { Card, Icon } from \"semantic-ui-react\"; // import Grid, Input, Form, Message, Button\n\nimport { Grid, Input, Form, Message, Button } from \"semantic-ui-react\"; // import Container and Header\n\nimport { Container, Header } from \"semantic-ui-react\"; // class based component\n\nvar StoryDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StoryDetails, _Component);\n\n  function StoryDetails() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StoryDetails);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StoryDetails)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onContribute\",\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var accounts, story, contribute_price_wei;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              // block default submitting the form\n              event.preventDefault(); // set button loading and clear error message\n\n              _this.setState({\n                loading: true,\n                error_msg: \"\"\n              }); // catch any error while executing the following\n\n\n              _context.prev = 2;\n              _context.next = 5;\n              return web3.eth.getAccounts();\n\n            case 5:\n              accounts = _context.sent;\n              // get the DreamStory instance of the address\n              story = dream_story(_this.props.address); // convert contribute price to wei\n\n              contribute_price_wei = web3.utils.toWei(_this.state.contribute_price, \"ether\"); // call contribute function using the user's first account\n              // use metamask's functinality to estimate the gas limit\n\n              _context.next = 10;\n              return story.methods.contribute().send({\n                from: accounts[0],\n                value: contribute_price_wei\n              });\n\n            case 10:\n              // refresh the current page, so the getInitialProps re-runs\n              Router.replaceRoute(\"/dream_stories/\".concat(_this.props.address));\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](2);\n\n              _this.setState({\n                error_msg: _context.t0.message\n              });\n\n            case 16:\n              // clear loading\n              _this.setState({\n                loading: false\n              });\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 13]]);\n    })));\n\n    return _this;\n  }\n\n  _createClass(StoryDetails, [{\n    key: \"renderActionButtons\",\n    value: function renderActionButtons() {\n      var _this2 = this;\n\n      return __jsx(Form, {\n        onSubmit: this.onContribute,\n        error: !!this.state.error_msg\n      }, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to contribute\"), __jsx(Input, {\n        label: \"ether\",\n        labelPosition: \"right\",\n        placeholder: \"0.001\",\n        value: this.state.contribute_price,\n        onChange: function onChange(event) {\n          return _this2.setState({\n            contribute_price: event.target.value\n          });\n        }\n      })), __jsx(Message, {\n        error: true,\n        header: \"Failed!\",\n        content: this.state.error_msg\n      }), __jsx(Button, {\n        loading: this.state.loading,\n        primary: true\n      }, \"Contribute\"), __jsx(\"p\", null), __jsx(Link, {\n        route: \"/dream_stories/\".concat(this.props.address, \"/downloads_list\")\n      }, __jsx(\"a\", null, __jsx(Button, {\n        primary: true\n      }, \"View Downloads\"))), __jsx(\"p\", null), __jsx(Link, {\n        route: \"/dream_stories/\".concat(this.props.address, \"/request_download\")\n      }, __jsx(\"a\", null, __jsx(Button, {\n        primary: true\n      }, \"Request Download\"))));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, null, __jsx(\"h2\", null, \"Story Details\"), __jsx(Grid, null, __jsx(Grid.Column, {\n        width: 10\n      }, __jsx(Container, {\n        text: true\n      }, __jsx(Header, {\n        as: \"h3\"\n      }, this.props.story_title), __jsx(\"p\", null, this.props.story))), __jsx(Grid.Column, {\n        width: 6\n      }, __jsx(Card, null, __jsx(Card.Content, {\n        header: \"Statistics\"\n      }), __jsx(Card.Content, {\n        extra: true\n      }, __jsx(Icon, {\n        name: \"dollar sign\"\n      }), this.props.balance, \" (balance, ether)\"), __jsx(Card.Content, {\n        extra: true\n      }, __jsx(Icon, {\n        name: \"user\"\n      }), this.props.votes_count, \" (votes)\"), __jsx(Card.Content, {\n        extra: true\n      }, __jsx(Icon, {\n        name: \"download\"\n      }), this.props.downloads_count, \" (downloads)\"), __jsx(Card.Content, {\n        extra: true\n      }, __jsx(Icon, {\n        name: \"cart arrow down\"\n      }), this.props.min_down_price, \" (download price, ether )\")), this.renderActionButtons())));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    // get initial properties\n    // the DreamStory address can be obtained from the argument props using the url\n    // since the url includes the contract address\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(props) {\n        var story, summary;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                // get the DreamStory instance of the address\n                story = dream_story(props.query.address); // get summary of the story\n\n                _context2.next = 3;\n                return story.methods.getSummary().call();\n\n              case 3:\n                summary = _context2.sent;\n                return _context2.abrupt(\"return\", {\n                  address: props.query.address,\n                  balance: summary[0],\n                  votes_count: summary[1],\n                  downloads_count: summary[2],\n                  min_down_price_wei: summary[3],\n                  approvers_count: summary[4],\n                  author: summary[5],\n                  story_title: summary[6],\n                  story: summary[7]\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }() // event handler for contribute button\n\n  }]);\n\n  return StoryDetails;\n}(Component); // export the component\n\n\nexport default StoryDetails;","map":{"version":3,"sources":["c:/Practice/DreamFactory_practice/pages/dream_stories/story_details.js"],"names":["React","Component","Layout","dream_story","Card","Icon","Grid","Input","Form","Message","Button","Container","Header","StoryDetails","event","preventDefault","setState","loading","error_msg","web3","eth","getAccounts","accounts","story","props","address","contribute_price_wei","utils","toWei","state","contribute_price","methods","contribute","send","from","value","Router","replaceRoute","message","onContribute","target","story_title","balance","votes_count","downloads_count","min_down_price","renderActionButtons","query","getSummary","call","summary","min_down_price_wei","approvers_count","author"],"mappings":"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","sourcesContent":["// import react\r\nimport React, { Component } from \"react\";\r\n// import layout\r\nimport Layout from \"../../components/layout\";\r\n// import DreamStory instance\r\nimport dream_story from \"../../ethereum/dream_story\";\r\n// import Form, Button from semantic-ui-react\r\nimport { Card, Icon } from \"semantic-ui-react\";\r\n// import Grid, Input, Form, Message, Button\r\nimport { Grid, Input, Form, Message, Button } from \"semantic-ui-react\";\r\n// import Container and Header\r\nimport { Container, Header } from \"semantic-ui-react\";\r\n\r\n// class based component\r\nclass StoryDetails extends Component {\r\n  // get initial properties\r\n  // the DreamStory address can be obtained from the argument props using the url\r\n  // since the url includes the contract address\r\n  static async getInitialProps(props) {\r\n    // get the DreamStory instance of the address\r\n    const story = dream_story(props.query.address);\r\n    // get summary of the story\r\n    const summary = await story.methods.getSummary().call();\r\n    // return the summary with labels\r\n    return {\r\n      address: props.query.address,\r\n      balance: summary[0],\r\n      votes_count: summary[1],\r\n      downloads_count: summary[2],\r\n      min_down_price_wei: summary[3],\r\n      approvers_count: summary[4],\r\n      author: summary[5],\r\n      story_title: summary[6],\r\n      story: summary[7]\r\n    };\r\n  }\r\n\r\n  // event handler for contribute button\r\n  onContribute = async () => {\r\n    // block default submitting the form\r\n    event.preventDefault();\r\n    // set button loading and clear error message\r\n    this.setState({ loading: true, error_msg: \"\" });\r\n    // catch any error while executing the following\r\n    try {\r\n      // get all accounts of a user and use the accounts[0] to contribute\r\n      const accounts = await web3.eth.getAccounts();\r\n      // get the DreamStory instance of the address\r\n      const story = dream_story(this.props.address);\r\n      // convert contribute price to wei\r\n      const contribute_price_wei = web3.utils.toWei(\r\n        this.state.contribute_price,\r\n        \"ether\"\r\n      );\r\n      // call contribute function using the user's first account\r\n      // use metamask's functinality to estimate the gas limit\r\n      await story.methods.contribute().send({\r\n        from: accounts[0],\r\n        value: contribute_price_wei\r\n      });\r\n      // refresh the current page, so the getInitialProps re-runs\r\n      Router.replaceRoute(`/dream_stories/${this.props.address}`);\r\n    } catch (error) {\r\n      this.setState({ error_msg: error.message });\r\n    }\r\n    // clear loading\r\n    this.setState({ loading: false });\r\n  };\r\n\r\n  renderActionButtons() {\r\n    return (\r\n      <Form onSubmit={this.onContribute} error={!!this.state.error_msg}>\r\n        <Form.Field>\r\n          <label>Amount to contribute</label>\r\n          <Input\r\n            label=\"ether\"\r\n            labelPosition=\"right\"\r\n            placeholder=\"0.001\"\r\n            value={this.state.contribute_price}\r\n            onChange={event =>\r\n              this.setState({ contribute_price: event.target.value })\r\n            }\r\n          />\r\n        </Form.Field>\r\n        <Message error header=\"Failed!\" content={this.state.error_msg} />\r\n        <Button loading={this.state.loading} primary>\r\n          Contribute\r\n        </Button>\r\n        <p></p>\r\n        <Link route={`/dream_stories/${this.props.address}/downloads_list`}>\r\n          <a>\r\n            <Button primary>View Downloads</Button>\r\n          </a>\r\n        </Link>\r\n        <p></p>\r\n        <Link route={`/dream_stories/${this.props.address}/request_download`}>\r\n          <a>\r\n            <Button primary>Request Download</Button>\r\n          </a>\r\n        </Link>\r\n      </Form>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <h2>Story Details</h2>\r\n        <Grid>\r\n          <Grid.Column width={10}>\r\n            <Container text>\r\n              <Header as=\"h3\">{this.props.story_title}</Header>\r\n              <p>{this.props.story}</p>\r\n            </Container>\r\n          </Grid.Column>\r\n          <Grid.Column width={6}>\r\n            <Card>\r\n              <Card.Content header=\"Statistics\" />\r\n              <Card.Content extra>\r\n                <Icon name=\"dollar sign\" />\r\n                {this.props.balance} (balance, ether)\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Icon name=\"user\" />\r\n                {this.props.votes_count} (votes)\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Icon name=\"download\" />\r\n                {this.props.downloads_count} (downloads)\r\n              </Card.Content>\r\n              <Card.Content extra>\r\n                <Icon name=\"cart arrow down\" />\r\n                {this.props.min_down_price} (download price, ether )\r\n              </Card.Content>\r\n            </Card>\r\n            {this.renderActionButtons()}\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n// export the component\r\nexport default StoryDetails;\r\n"]},"metadata":{},"sourceType":"module"}